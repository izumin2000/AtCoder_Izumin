INIAD4年生です。質問文の問題は私が以前、知恵袋の回答で貼り付けた問題ですね。責任持って回答します。

> 事前適性審査の難易度は高いでしょうか
私がINIAD Moocs型AO入試を受けたときは合格率がだいたい3割くらいだったと思います。最近だと数学が必須になったと聞いたので、難易度は私の世代より高くなっているかと思われます。


> print(12*3+45)
答えは81です。
*は掛け算です。


> print("12"*3+"45")
答えは12121245です。
pythonは文字列の足し算と掛け算ができます。問題文のコードだと文字列12を3回繰り返し、その後に文字列45を足した12121245が答えとなります。


> print("12"*"3"+45)
厳密な答えはTypeError: can't multiply sequence by non-int of type 'str'ですが、おそらくタイプエラーと答えるだけで良いと思います。
pythonを含むプログラム言語は想定している型同士の演算以外の演算をしようとすると、エラーを吐きます。1グラム + 1メートルみたいな演算はできないのと同じ要領です。
問題文のコードの場合、文字列 * 文字列、及び 文字列 + 整数が誤った演算なのでエラーになります。


> print([1,2]*3+[4,5])
答えは[1, 2, 1, 2, 1, 2, 4, 5]です。
問題文の[]はリストであらゆるデータを並べることができる型です。
問題文の場合、リスト[1, 2]を3回繰り返して、その後に[4, 5]を加えているので、答えは[1, 2, 1, 2, 1, 2, 4, 5]になります。


> print(12 < 345)
答えはTrueになります。
<は数学記号の大なりと同じ演算子です。
問題文の場合、「12より345の方が大きい」という条件が真なので答えはTrueになります。

> print((12<345) or (123>45))
答えはTrueになります。
orは条件演算子の1つで条件A or 条件Bの場合、条件Aか条件Bの1つ以上がTrueならTrueになるという意味です。
問題文の場合、 (12<345)はTrueで(123>45)はTrueになり1つ以上の条件に合致している為、Trueになります。


> 問2)
答えは
def isBig(n, m) :
    if n > m :
        return "YES"
    elif n < m :
        return "No"
    else :
        return "Even"
です。
関数の説明をしてしまうと長くなってしまうのでINIAD Moocsを読むなりネットで調べるなりしてください。
6行目は elif n == m : でも 大丈夫です。

> 問3)
答えは
def f(x) :
    return (x + 1) * (x - 2)
になります。
数学と違い掛け算は略せないことに注意してください。

> 問4)
答えは
def PrintRectangle(n, m) : 
    for i in range(n) :
        print("#" * m)
になります。
forの説明は省きます。
変数iはfor文内で使われていない為、iを_(アンダーバー)にした
def PrintRectangle(n, m) : 
    for _ in range(n) :
        print("#" * m)
でも正解になります。

ちなみに私は入試当時、
def PrintRectangle(n, m) : 
    print(((("#" * n) + "\n") * m)[:-1])
と答えました。
こちらでも上記のコードと同じ結果になります。"\n"は改行文字、[:-1]は最後の文字を削るという意味です。

注意事項といたしましては問題文に「返してください」と書かれていたらreturnで答え、「表示してください」と書かれていたらprintで答えてください。
これを知らないINIAD 1年生はコンピューターサイエンス概論の定期テストで、数十点も落としています。こわいね。


> 問5)
答えは
def SumOdd(x) :
    answer = 0
    for i in range(1, x, 2) :
        answer = answer + i
    return answer
になります。
range(1, x, 2)は「1から2つ刻みでx未満までの範囲で」という意味です。つまり1, 3, 5,..., x - 3, x - 1ですね。
ちなみに、answer = answer + i は answer += i と略すことができます。

別解ですが、
def SumOdd(x) :
    return sum(range(1, x, 2))
と答えるのもできます。
sum()はリストの総和を導くことができます。


> 問6)
答えは
def RemoveOdd(s) :
    return s[::2]
になります。
上記のコードの[]はスライスです。forやifを使ってもできますが、スライスを使ったほうがよりスマートに解けます。
s[::2]は文字列sを奇数番目の文字を取り除いた文字列、
s[1::2]は文字列sを偶数番目の文字を取り除いた文字列、
s[::-1]は文字列sを反転した文字列、
s[3:]は最初の3文字を取り除いた文字列、
s[:3]は最初の3文字のみの文字列、
s[:-3]は最後の3文字を取り除いた文字列、
s[-3:]は最後の3文字のみの文字列と覚えましょう。
これさえ覚えられば、試験問題の後半は無双できます。


> 問7)
1ユーロ140円、1ドル130円とすると答えは
def euro_to_dollar(x) :
    return x * 140 / 130
になります。
単位変換は必ずできるようにしてください。コンピューターサイエンス概論でも出るくらい、教授が好きな問題です。なぜ好きなのかは不明です。


> 問8)
答えは
for i in range(1, 1000 + 1) :
    if i%2 != 0 :
        if i%3 != 0 :
            print(i)
です。
「プログラムを作成しなさい。」と問題文に明記されている為、関数は作っても作らなくても良いです。
%は余り算です。!=は条件A != 条件Bの場合、「条件Aと条件Bが不一致なら」という意味です。
if i%3 == 0 : はiは3の倍数なら、
if i%3 != 0 : はiは3の倍数でないのならという意味で覚えましょう。
余談ですが、pythonは0や空文字はFalse、それ以外ならTrueと同値になるので、
for i in range(1, 1000 + 1) :
    if i % 2 :
        if i % 3 :
            print(i)
でも正解になります。
余談ですが、
print("\n".join([str(i) for i in range(1, 1000 + 1) if (i%2 and i%3)]))
このように無理矢理1行のみで書くこともできますが、このコードは理解できなくても良いです。気になる場合は「リスト内包表記」で調べてみてください。


> 問9)
答えは
def minlist(xs, n) :
    answer = []
    for i in xs :
        if len(i) < n :
            answer.append(i)
    return answer
になります。まず、 answer = [] で返すリストの変数answerを用意します。
次に問題文の「長さn以上の要素を除外する」という条件から「長さn未満の要素を残す」と読み替えるとし、これをコードに書き起こします。
for i in xs : でリストxsの最初の要素から順番に取り出してそれぞれを変数iとします。次に
len(i) でi長さを調べ、if len(i) < n : でそれがn未満か真偽します。
if文が真ならanswer.append(i) でanswerに追加していきます。


> 問10)
答えは
def isShiritori(xs) :
    heads = []
    for x in xs :
        heads.append(x[0])
    teils = []
    for x in xs :
        teils.append(x[-1])
    if "ん" in teils :
        return False
    if heads[1:] == teils[:-1] :
        return True
    else :
        return False
になります。
捨て問です。解けたらつよつよです。pythonを完全に理解できています。教授から好かれます。
軽く説明するとまずリスト内の各文字の最初を保存するリストheadsと各文字の最後を保存するリストtailsを作ります。
なので、xsが["りんご","ごうかく","くも","もじれつ","つき"]の場合、headsは['り', 'ご', 'く', 'も', 'つ']、tailsは ['ご', 'く', 'も', 'つ', 'き']になります。
しりとりなので任意の言葉の最後の文字とその次の文字の最初の文字が一致しているので、headsの最初以外とtailsの最後以外が一致していたらしりとりが成立していることになります。
あとはコードに書き起こせば完成です。



練習問題です。私が作問したので、是非解いてみてください！「F - 密です」まで解けたらいいかんじです。
https://drive.google.com/file/d/1NB-qEejVDMkyZrQ_7NO1AVJew869u4Xn/view?usp=sharing