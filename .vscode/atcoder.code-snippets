{
	"cond": {
		"prefix": [
			"cccc",
			"cond",
			"zyouken",
		],
		"body": [
			"cond = $1",
			"print('Yes' if cond else 'No')",
		],
	},

	"pppp": {
		"prefix": [
			"p",
			"pppp",
		],
		"body": [
			"print($1)",
		],
	},

	"intinput": {
		"prefix": [
			"n",
			"nnnn",
			"intinput",
			"inputn",
		],
		"body": [
			"$1 = int(input())",
		],
	},

	"strinput": {
		"prefix": [
			"s",
			"ssss",
			"strinput",
		],
		"body": [
			"s = input()",
		],
	},

	"map": {
		"prefix": [
			"map",
			"mmmm",
		],
		"body": [
			"$1 = map(int, input().split())",
		],
	},

	"listmap": {
		"prefix": [
			"m",
			"mapl",
			"llll",
			"listmap",
		],
		"body": [
			"$1 = list(map(int, input().split()))",
		],
	},

	"np": {
		"prefix": "np",
		"body": [
			"import numpy as np",
		],
	},

	"npmapl": {
		"prefix": "npmapl",
		"body": [
			"$1 = np.array(list(map(int, input().split())))",
		],
	},

	"npunique": {
		"prefix": "npunique",
		"body": [
			"u, counts = np.unique($1, return_counts=True)",
		],
	},

	"printdebag": {
		"prefix": [
			"dddd",
			"debug",
			"printdebag",
		],
		"body": [
			"print(f\"\\033[31m{$1}\\033[0m\")"
		],
	},

	"rangen": {
		"prefix": [
			"rangen",
			"rrrr",
		],
		"body": [
			"for $1 in range(n) :",
		],
	},

	"counter": {
		"prefix": "counter",
		"body": [
			"# import collections",
			"d = collections.Counter($1)",
			"for k, v in d.items() :",
			"\t$2",
		],
	},

	"pickuptwo": {
		"prefix": [
			"pickup2",
			"pair",
			"kumiawase",
			"comb",
		],
		"body": [
			"# import itertools",
			"for pair in itertools.combinations($1, 2) :",
			"\t$2",
		],
	},

	"exit": {
		"prefix": [
			"teishi",
			"teisi",
			"exit",
			"eeee",
			"quit",
		],
		"body": [
			"# import sys",
			"sys.exit()",
		],
	},
}